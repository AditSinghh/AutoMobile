"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ansi = void 0;
var colorMap = {
    'black': '0',
    'red': '1',
    'green': '2',
    'yellow': '3',
    'blue': '4',
    'violet': '5',
    'purple': '5',
    'cyan': '6',
    'white': '7',
};
var modeMap = {
    'f': '3',
    'F': '9',
    'b': '4',
};
var effectMap = {
    'normal': '0',
    'bold': '1',
    'italic': '3',
    'under': '4',
    'blink': '5',
    'invert': '7',
    'strike': '9',
};
var effectRegex = new RegExp(Object.keys(effectMap).join('|'), 'g');
function ansi(strings) {
    var values = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        values[_i - 1] = arguments[_i];
    }
    var regex = /%{([0-9a-z.;]+)}/gi;
    var text = '';
    for (var _a = 0, strings_1 = strings; _a < strings_1.length; _a++) {
        var string = strings_1[_a];
        text += string;
        if (values instanceof Array && values.length > 0) {
            text += String(values.shift());
        }
    }
    if (!ansi.enabled) {
        return text.replace(regex, '');
    }
    text = text.replace(regex, function (match, value) {
        value = value
            .replace(/([fFb])\.(\w+)/g, function (match, mode, color) {
            if (typeof colorMap[color] == 'undefined') {
                return '';
            }
            return modeMap[mode] + colorMap[color];
        })
            .replace(effectRegex, function (m) { return effectMap[m]; });
        if (!value) {
            return '';
        }
        return "\u001B[".concat(value, "m");
    });
    return text + '\x1b[0m';
}
exports.ansi = ansi;
ansi.enabled = true;
